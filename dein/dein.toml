[[plugins]]
repo = 'Shougo/dein.vim'

# LSP
[[plugins]]	
repo = "neoclide/coc.nvim"	
merge = 0	
rev = "release"	
build = './install.sh nightly'	
hook_add='source ~/.config/nvim/coc-options.vim'

# colorscheme
[[plugins]]
repo = 'sainnhe/gruvbox-material'

# filer
[[plugins]]	
repo = 'cocopon/vaffle.vim'	
hook_add = '''	
nnoremap <silent> <Space>f  :<C-u>Vaffle<CR>	
  function! VaffleRenderCustomIcon(item)	
    return WebDevIconsGetFileTypeSymbol(a:item.basename, a:item.is_dir)	
  endfunction	
  let g:vaffle_render_custom_icon = 'VaffleRenderCustomIcon'	
let g:vaffle_show_hidden_files = 1	
let g:vaffle_auto_cd = 1
let g:vaffle_force_delete = 1
'''	

# devicons
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
marge = 0

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
" Or, you could use neovim's floating text feature.
let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'floating'
" To use a custom highlight for the float window,
" change Pmenu to your highlight group
highlight link EchoDocFloat Pmenu
'''

# [ lightline ] ------------------------
# ======================================
[[plugins]]
repo = 'itchyny/lightline.vim'

hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'gruvbox_material',
      \ 'component_function': {
      \   'filename': 'LightlineFilename',
      \ },
      \ 'enable': {'tabline': 1},
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ], [ 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'tabline': {
      \   'left': [ ['buffers'] ],
      \   'right': [ ['close'] ]
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' },
      \ 'component_expand': {
      \   'buffers': 'lightline#bufferline#buffers'
      \ },
      \ 'component_type': {
      \   'buffers': 'tabsel'
      \ }
      \ }

let g:lightline#bufferline#shorten_path = 0

nnoremap <silent> <C-t><C-p> :bdelete<CR>
nnoremap <silent> <C-t><C-h> :bprev<CR>
nnoremap <silent> <C-t><C-l> :bnext<CR>

function! LightlineFilename()
  let root = fnamemodify(get(b:, 'git_dir'), ':h')
  let path = expand('%:p')
  if path[:len(root)-1] ==# root
    return path[len(root)+1:]
  endif
  return expand('%')
endfunction

autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update()
set showtabline=2
'''

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'
# ======================================
# --------------------------------------

# [ filetype ] -------------------------
# ======================================
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim'] 
hook_add = '''
let g:context_filetype#search_offset = 100
	let g:precious_enable_switchers = {
	\	"vue" : {
	\		"setfiletype" : 0
	\	},
	\}
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
# ======================================
# --------------------------------------


# [ git ] ------------------------------
# ======================================
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = "airblade/vim-gitgutter"
hook_add = '''
nnoremap <silent> ,gh :<C-u>GitGutterLineHighlightsToggle<CR>
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
nnoremap <silent><space>gs :<C-u>Gina status --opener="botright split"<CR>
nnoremap <silent><space>ct :<C-u>Gina commit<CR>
call gina#custom#command#alias('status', 'st')
call gina#custom#command#alias('commit', 'ct')
'''

# ======================================
# --------------------------------------


# [ highlight ] ------------------------
# ======================================
[[plugins]]
repo = 'itchyny/vim-parenmatch'

[[plugins]]
repo = 'chrisbra/Colorizer'

[[plugins]]
repo = 'thinca/vim-zenspace'
hook_add = '''
let g:zenspace#default_mode = 'on'
'''

[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
let g:highlightedyank_highlight_duration = 200
'''
# ======================================
# --------------------------------------


# [ keymap ] ---------------------------
# ======================================
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map <Space>s <Plug>(operator-replace)
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'liuchengxu/vim-clap'
hook_add = '''
let g:clap_enable_icon = 1
let g:clap_insert_mode_only = v:true
nnoremap <silent><Space>cf 
\ :<C-u>Clap files<CR>
nnoremap <silent><Space>cg 
\ :<C-u>Clap grep<CR>
nnoremap <silent><Space>cb 
\ :<C-u>Clap buffers<CR>
nnoremap <silent><Space>cy 
\ :<C-u>Clap yanks<CR>
'''
# ======================================
# --------------------------------------
