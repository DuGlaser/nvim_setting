[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
" if exists('+termguicolors')
"   let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"   let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
"   set termguicolors
" endif

set termguicolors
syntax enable 
filetype plugin indent on

let g:gruvbox_contrast_dark = 'soft'
let g:gruvbox_invert_selection= 0
colorscheme gruvbox
'''

# [[plugins]]
# repo = 'ghifarit53/tokyonight-vim'
# hook_add = '''
# set termguicolors

# let g:tokyonight_style = 'storm' " available: night, storm
# let g:tokyonight_enable_italic = 1

# colorscheme tokyonight
# '''

# neovim #12587
[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'
hook_add = '''
let g:cursorhold_updatetime = 100
'''

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
marged = 0

[[plugins]]
repo = 'machakann/vim-sandwich'

# [ lightline ] ------------------------
# ======================================
[[plugins]]
repo = 'itchyny/lightline.vim'

hook_add = '''
let g:lightline = {
      \ 'colorscheme': 'gruvbox',
      \ 'component_function': {
      \   'filename': 'LightlineFilename',
      \ },
      \ 'enable': {'tabline': 0},
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ], [ 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' },
      \ }


function! LightlineFilename()
  let root = fnamemodify(get(b:, 'git_dir'), ':h')
  let path = expand('%:p')
  if path[:len(root)-1] ==# root
    return path[len(root)+1:]
  endif
  return expand('%')
endfunction

autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update()
set showtabline=2
'''
# ======================================
# --------------------------------------


# [ git ] ------------------------------
# ======================================
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
hook_add = '''
lua <<EOF
require('gitsigns').setup{
    -- debug_mode = true,
    signs = {
      add          = {hl = 'GitGutterAdd'   },
      change       = {hl = 'GitGutterChange'},
      delete       = {hl = 'GitGutterDelete'},
      topdelete    = {hl = 'GitGutterDelete'},
      changedelete = {hl = 'GitGutterChange'},
    },
  }
EOF
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'
hook_add = '''
nnoremap <silent><space>gs :<C-u>Gina status --opener="botright split"<CR>
nnoremap <silent><space>ct :<C-u>Gina commit<CR>
call gina#custom#command#alias('status', 'st')
call gina#custom#command#alias('commit', 'ct')
'''

# ======================================
# --------------------------------------


# [ highlight ] ------------------------
# ======================================
[[plugins]]
repo = 'itchyny/vim-parenmatch'
hook_add = '''
let g:loaded_matchparen = 1
'''

[[plugins]]
repo = 'chrisbra/Colorizer'

[[plugins]]
repo = 'thinca/vim-zenspace'
hook_add = '''
let g:zenspace#default_mode = 'on'
'''

[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
let g:highlightedyank_highlight_duration = 200
'''
# ======================================
# --------------------------------------


# [ keymap ] ---------------------------
# ======================================
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map <Space>s <Plug>(operator-replace)
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'liuchengxu/vim-clap'
hook_add = '''
let g:clap_enable_icon = 1
let g:clap_insert_mode_only = v:true
nnoremap <silent><Space>cf 
\ :<C-u>Clap files<CR>
nnoremap <silent><Space>cg 
\ :<C-u>Clap grep<CR>
nnoremap <silent><Space>cb 
\ :<C-u>Clap buffers<CR>
nnoremap <silent><Space>cy 
\ :<C-u>Clap yanks<CR>
'''

[[plugins]]
repo = 'zefei/vim-wintabs'
hook_add = '''
nmap <C-t><C-l> <plug>(wintabs_next)
nmap <C-t><C-h> <plug>(wintabs_previous)
nmap <C-t><C-p> <plug>(wintabs_close)
'''

[[plugins]]
repo = 'zefei/vim-wintabs-powerline'

[[plugins]]
repo = 'tyru/columnskip.vim'
hook_add = '''
nmap sj <Plug>(columnskip:nonblank:next)
omap sj <Plug>(columnskip:nonblank:next)
xmap sj <Plug>(columnskip:nonblank:next)
nmap sk <Plug>(columnskip:nonblank:prev)
omap sk <Plug>(columnskip:nonblank:prev)
xmap sk <Plug>(columnskip:nonblank:prev)
'''
# ======================================
# --------------------------------------


# [ text object ] ----------------------
# ======================================
[[plugins]]
repo = 'bkad/CamelCaseMotion'
hook_add = '''
omap <silent> ,w <Plug>CamelCaseMotion_iw
xmap <silent> ,w <Plug>CamelCaseMotion_iw
omap <silent> ,b <Plug>CamelCaseMotion_ib
xmap <silent> ,b <Plug>CamelCaseMotion_ib
omap <silent> ,e <Plug>CamelCaseMotion_ie
xmap <silent> ,e <Plug>CamelCaseMotion_ie
map <silent> W <Plug>CamelCaseMotion_w
map <silent> B <Plug>CamelCaseMotion_b
map <silent> E <Plug>CamelCaseMotion_e
'''

[[plugins]]
repo = 'romgrk/equal.operator'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'
hook_add = '''
let g:vim_textobj_parameter_mapping = ','
'''
# ======================================
# --------------------------------------
